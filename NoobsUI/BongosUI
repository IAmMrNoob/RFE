local Bongo_sUI,bUIParent = {},nil
if game:GetService('RunService'):IsStudio() then
	bUIParent = game.Players.LocalPlayer.PlayerGui
else
	bUIParent = gethui()
end
Bongo_sUI.Create = function()
	local ScreenGui = Instance.new("ScreenGui",bUIParent)
	local MainUIFrame = Instance.new("Frame",ScreenGui)
	local MainUIRoundedFrame = Instance.new("Frame",MainUIFrame)
	local MainUIRoundedFrameCorner = Instance.new("UICorner",MainUIRoundedFrame)
	local TabButtons = Instance.new("Frame",MainUIFrame)
	local TabButtonView = Instance.new("ScrollingFrame",TabButtons)
	local TabButtonViewLayout = Instance.new("UIListLayout",TabButtonView)
	local MainviewHolder = Instance.new("Frame",MainUIFrame)
	local MainView = Instance.new("Frame",MainviewHolder)
	local MainViewRoundedCorner = Instance.new("UICorner",MainView)
	local PagesView = Instance.new("ScrollingFrame",MainView)
	local PagesViewLayout = Instance.new("UIListLayout",PagesView)
	local ClosePage = Instance.new("ImageButton",MainView)
	local ClosePageIndicator = Instance.new("ImageLabel",ClosePage)
	local MainUIFrameProfile = Instance.new("Frame",MainUIFrame)
	local MainUIRoundedFrameProfile = Instance.new("Frame",MainUIFrameProfile)
	local MainUIRoundedFrameProfileCorner = Instance.new("UICorner",MainUIRoundedFrameProfile)
	local MainProfile = Instance.new("ImageLabel",MainUIRoundedFrameProfile)
	local OpenUi = Instance.new("Frame",ScreenGui)
	local Stub = Instance.new("Frame",OpenUi)
	local Profile = Instance.new("ImageLabel",OpenUi)
	local Stub2 = Instance.new("Frame",OpenUi)
	local OpenUiCorner = Instance.new("UICorner",OpenUi)
	local ProfileName = Instance.new("TextLabel",OpenUi)
	local OpenUiButton = Instance.new("ImageButton",OpenUi)
	local blureffect = Instance.new('BlurEffect',game:GetService('Lighting'))
	local plrs = game:GetService("Players");local plr = game.Players.LocalPlayer
	local thumbType = Enum.ThumbnailType.AvatarBust;
	local thumbSize = Enum.ThumbnailSize.Size60x60;
	local content, isReady = plrs:GetUserThumbnailAsync(plr.UserId, thumbType, thumbSize);
	do
		ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		ScreenGui.ResetOnSpawn = false

		MainUIFrame.Name = "MainUIFrame"
		MainUIFrame.AnchorPoint = Vector2.new(0.5, 1)
		MainUIFrame.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		MainUIFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainUIFrame.BorderSizePixel = 0
		MainUIFrame.Position = UDim2.new(.5,0,1,150)
		MainUIFrame.Size = UDim2.new(0, 800, 0, 25)

		MainUIRoundedFrame.Name = "MainUIRoundedFrame"
		MainUIRoundedFrame.AnchorPoint = Vector2.new(0.5, 1)
		MainUIRoundedFrame.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		MainUIRoundedFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainUIRoundedFrame.BorderSizePixel = 0
		MainUIRoundedFrame.Position = UDim2.new(0.5, 0, 1, 0)
		MainUIRoundedFrame.Size = UDim2.new(0, 800, 0, 70)
		MainUIRoundedFrame.ZIndex = 2

		MainUIRoundedFrameCorner.CornerRadius = UDim.new(0, 28)
		MainUIRoundedFrameCorner.Name = "MainUIRoundedFrameCorner"

		TabButtons.Name = "TabButtons"
		TabButtons.AnchorPoint = Vector2.new(0, 1)
		TabButtons.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		TabButtons.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TabButtons.BorderSizePixel = 0
		TabButtons.Position = UDim2.new(0.0162499994, 0, 1.00000238, 0)
		TabButtons.Size = UDim2.new(0, 774, 0, 65)
		TabButtons.ZIndex = 2
		TabButtons.BackgroundTransparency = 1

		TabButtonView.Name = "TabButtonView"
		TabButtonView.Active = true
		TabButtonView.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabButtonView.BackgroundTransparency = 1.000
		TabButtonView.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TabButtonView.BorderSizePixel = 0
		TabButtonView.Size = UDim2.new(1, 0, 1, 0)
		TabButtonView.CanvasSize = UDim2.new(0, 0, 0, 0)
		TabButtonView.ScrollBarThickness = 6
		TabButtonView.AutomaticCanvasSize = "Y"

		TabButtonViewLayout.Name = "TabButtonViewLayout"
		TabButtonViewLayout.FillDirection = Enum.FillDirection.Horizontal
		TabButtonViewLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		TabButtonViewLayout.SortOrder = Enum.SortOrder.LayoutOrder
		TabButtonViewLayout.VerticalAlignment = Enum.VerticalAlignment.Center
		TabButtonViewLayout.Padding = UDim.new(0, 15)

		MainviewHolder.Name = "MainviewHolder"
		MainviewHolder.AnchorPoint = Vector2.new(0, 1)
		MainviewHolder.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
		MainviewHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainviewHolder.BorderSizePixel = 0
		MainviewHolder.Position = UDim2.new(0.58375001, 0, -1.79999995, 265)
		MainviewHolder.Size = UDim2.new(0, 300, 0, 30)
		MainviewHolder.ZIndex = -1

		MainView.Name = "MainView"
		MainView.AnchorPoint = Vector2.new(0.5, 1)
		MainView.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
		MainView.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainView.BorderSizePixel = 0
		MainView.Position = UDim2.new(0.5, 0, 0.966666639, 0)
		MainView.Size = UDim2.new(0, 300, 0, 290)

		MainViewRoundedCorner.CornerRadius = UDim.new(0, 18)
		MainViewRoundedCorner.Name = "MainViewRoundedCorner"

		PagesView.Name = "PagesView"
		PagesView.Active = true
		PagesView.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		PagesView.BackgroundTransparency = 1.000
		PagesView.BorderColor3 = Color3.fromRGB(0, 0, 0)
		PagesView.CanvasSize = UDim2.new(0, 0, 0, 0)
		PagesView.BorderSizePixel = 0
		PagesView.Position = UDim2.new(0, 0, 0.103448279, 0)
		PagesView.Size = UDim2.new(0, 300, 0, 261)
		PagesView.ScrollBarThickness = 6
		PagesView.AutomaticCanvasSize = "Y"

		PagesViewLayout.Name = "PagesViewLayout"
		PagesViewLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		PagesViewLayout.SortOrder = Enum.SortOrder.LayoutOrder
		PagesViewLayout.Padding = UDim.new(0, 5)

		ClosePage.Name = "ClosePage"
		ClosePage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ClosePage.BackgroundTransparency = 1.000
		ClosePage.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ClosePage.BorderSizePixel = 0
		ClosePage.Position = UDim2.new(0.0833333358, 0, 0, 0)
		ClosePage.Size = UDim2.new(0, 250, 0, 25)
		ClosePage.ImageTransparency = 1.000

		ClosePageIndicator.AnchorPoint = Vector2.new(0.5, 0.5)
		ClosePageIndicator.BackgroundTransparency = 1.000
		ClosePageIndicator.BorderSizePixel = 0
		ClosePageIndicator.Position = UDim2.new(0.5, 0, 0.5, 0)
		ClosePageIndicator.Size = UDim2.new(0, 35, 0, 35)
		ClosePageIndicator.Image = "http://www.roblox.com/asset/?id=6031094679"

		MainUIFrameProfile.Name = "MainUIFrameProfile"
		MainUIFrameProfile.AnchorPoint = Vector2.new(0.5, 1)
		MainUIFrameProfile.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		MainUIFrameProfile.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainUIFrameProfile.BorderSizePixel = 0
		MainUIFrameProfile.Position = UDim2.new(0.5, 0, -1, 0)
		MainUIFrameProfile.Size = UDim2.new(0, 100, 0, 42)

		MainUIRoundedFrameProfile.Name = "MainUIRoundedFrameProfile"
		MainUIRoundedFrameProfile.AnchorPoint = Vector2.new(0.5, 1)
		MainUIRoundedFrameProfile.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		MainUIRoundedFrameProfile.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainUIRoundedFrameProfile.BorderSizePixel = 0
		MainUIRoundedFrameProfile.Position = UDim2.new(0.5, 0, 0.999995649, 0)
		MainUIRoundedFrameProfile.Size = UDim2.new(0, 100, 0, 100)

		MainUIRoundedFrameProfileCorner.CornerRadius = UDim.new(0, 50)
		MainUIRoundedFrameProfileCorner.Name = "MainUIRoundedFrameProfileCorner"

		MainProfile.Name = "MainProfile"
		MainProfile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		MainProfile.BackgroundTransparency = 1.000
		MainProfile.BorderColor3 = Color3.fromRGB(0, 0, 0)
		MainProfile.BorderSizePixel = 0
		MainProfile.Position = UDim2.new(0.150000006, 0, 0.153580323, 0)
		MainProfile.Size = UDim2.new(0, 69, 0, 69)

		OpenUi.Name = "OpenUi"
		OpenUi.AnchorPoint = Vector2.new(1, 1)
		OpenUi.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		OpenUi.BorderColor3 = Color3.fromRGB(0, 0, 0)
		OpenUi.BorderSizePixel = 0
		OpenUi.Position = UDim2.new(1, 0, 1, 0)
		OpenUi.Size = UDim2.new(0, 250, 0, 50)

		Stub.Name = "Stub"
		Stub.AnchorPoint = Vector2.new(1, 1)
		Stub.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		Stub.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Stub.BorderSizePixel = 0
		Stub.Position = UDim2.new(1, 0, 1, 0)
		Stub.Size = UDim2.new(0, 15, 0, 50)
		Stub.ZIndex = -1

		Profile.Name = "Profile"
		Profile.AnchorPoint = Vector2.new(1, 1)
		Profile.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Profile.BackgroundTransparency = 1.000
		Profile.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Profile.BorderSizePixel = 0
		Profile.Position = UDim2.new(1, 0, 1, 0)
		Profile.Size = UDim2.new(0, 50, 0, 50)

		Stub2.Name = "Stub2"
		Stub2.AnchorPoint = Vector2.new(0, 1)
		Stub2.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
		Stub2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Stub2.BorderSizePixel = 0
		Stub2.Position = UDim2.new(0, 0, 1, 0)
		Stub2.Size = UDim2.new(0, 249, 0, 15)
		Stub2.ZIndex = -1

		OpenUiCorner.CornerRadius = UDim.new(0, 18)
		OpenUiCorner.Name = "OpenUiCorner"

		ProfileName.Name = "ProfileName"
		ProfileName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ProfileName.BackgroundTransparency = 1.000
		ProfileName.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ProfileName.BorderSizePixel = 0
		ProfileName.Size = UDim2.new(0, 200, 0, 50)
		ProfileName.Font = Enum.Font.GothamBold
		ProfileName.TextColor3 = Color3.fromRGB(255, 255, 255)
		ProfileName.TextSize = 16.000
		ProfileName.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

		OpenUiButton.Name = "OpenUi"
		OpenUiButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		OpenUiButton.BackgroundTransparency = 1.000
		OpenUiButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		OpenUiButton.BorderSizePixel = 0
		OpenUiButton.Size = UDim2.new(1, 0, 1, 0)
		OpenUiButton.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
		OpenUiButton.ImageTransparency = 1.000
		blureffect.Size = 0
		blureffect.Enabled = true
	end
	local busybluring,isblurred,tw = false,false,game:GetService("TweenService")
	local twInfo = TweenInfo.new(.1,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut)
	local isAPageOpened = false
	local Tweens = {
		Blur = {
			Show = tw:Create(blureffect,twInfo,{
				Size = 14
			}),
			Hide = tw:Create(blureffect,twInfo,{
				Size = 0
			})
		},
		OpenButton = {
			Hide = tw:Create(OpenUi,twInfo,{
				Position = UDim2.new(1,50,1,0)
			}),
			Show = tw:Create(OpenUi,twInfo,{
				Position = UDim2.new(1,0,1,0)
			})
		},
		MainUI = {
			Hide = tw:Create(MainUIFrame,twInfo,{
				Position = UDim2.new(.5,0,1,150)
			}),
			Show = tw:Create(MainUIFrame,twInfo,{
				Position = UDim2.new(.5,0,1,0)
			})
		},
		Pages = {
			Show = tw:Create(MainviewHolder,twInfo,{
				Position = UDim2.new(0.584, 0,-1.8, 0)
			}),
			Hide = tw:Create(MainviewHolder,twInfo,{
				Position = UDim2.new(0.584, 0,-1.8, 265)
			})
		}

	}
	local function closePageButton(set,x)
		local canOpenImage,canCloseImage = 'http://www.roblox.com/asset/?id=6031094679','http://www.roblox.com/asset/?id=6031094687'
		isAPageOpened = not isAPageOpened
		if set then
			isAPageOpened = x
			if x then
				ClosePageIndicator.Image = canCloseImage
				Tweens.Pages.Show:Play()
			else
				ClosePageIndicator.Image = canOpenImage
				Tweens.Pages.Hide:Play()
			end
		else
			if isAPageOpened then
				ClosePageIndicator.Image = canCloseImage
				Tweens.Pages.Show:Play()
			else
				ClosePageIndicator.Image = canOpenImage
				Tweens.Pages.Hide:Play()
			end
		end
	end
	local function blur()
		if busybluring == false then
			busybluring = true
			if not isblurred then
				Tweens.Blur.Hide:Cancel()
				Tweens.MainUI.Hide:Cancel()
				Tweens.OpenButton.Show:Cancel()

				Tweens.Blur.Show:Play()
				Tweens.MainUI.Show:Play()
				Tweens.OpenButton.Hide:Play()
			else
				Tweens.Blur.Show:Cancel()
				Tweens.MainUI.Show:Cancel()
				Tweens.OpenButton.Hide:Cancel()

				Tweens.Blur.Hide:Play()
				Tweens.MainUI.Hide:Play()
				Tweens.Pages.Hide:Play()
				Tweens.OpenButton.Show:Play()
				closePageButton(true,false)
			end
			isblurred = not isblurred
			busybluring = false
		end
	end
	ClosePage.MouseButton1Click:Connect(function()
		closePageButton()
	end)
	OpenUiButton.MouseButton1Click:Connect(function()
		blur()
	end)
	local function AddGradient(x)
		local UIGradient = Instance.new("UIGradient",x.p)
		UIGradient.Color = ColorSequence.new(x.se)
		x.p.BackgroundColor3 = Color3.new(1, 1, 1)
	end
	AddGradient{
		p = MainUIFrame,
		se = {
			ColorSequenceKeypoint.new(0, Color3.fromRGB(24, 24, 24)), 
			ColorSequenceKeypoint.new(0.495, Color3.fromRGB(30, 30, 30)), 
			ColorSequenceKeypoint.new(0.505, Color3.fromRGB(30, 30, 30)), 
			ColorSequenceKeypoint.new(1, Color3.fromRGB(24, 24, 24))
		}
	}
	AddGradient{
		p = MainUIRoundedFrame,
		se = {
			ColorSequenceKeypoint.new(0, Color3.fromRGB(24, 24, 24)), 
			ColorSequenceKeypoint.new(0.495, Color3.fromRGB(30, 30, 30)), 
			ColorSequenceKeypoint.new(0.505, Color3.fromRGB(30, 30, 30)), 
			ColorSequenceKeypoint.new(1, Color3.fromRGB(24, 24, 24))
		}
	}
	MainProfile.Image = content;Profile.Image = content;ProfileName.Text = plr.Name;
	local icons = {
		defualt = 'http://www.roblox.com/asset/?id=6035039429',
		defaultalt = 'http://www.roblox.com/asset/?id=6034767621',
		home = 'http://www.roblox.com/asset/?id=6026568198',
		setting = 'http://www.roblox.com/asset/?id=6031280882',
		settingb = 'http://www.roblox.com/asset/?id=6031280894',
		info = 'http://www.roblox.com/asset/?id=6026568210',
		infob = 'http://www.roblox.com/asset/?id=6026568227',
		misc = 'http://www.roblox.com/asset/?id=6034509993'
	}
	local function geticon(x)
		if typeof(x) == 'string' then
			return icons[x:lower()]
		end
		return false
	end
	local Main,AmountOfPages = {},0
	Main.Page = function(x)
		AmountOfPages +=1
		x = x or {}
		x.DisplayName = x.DisplayName or x.Name ~= nil and true or false
		x.Name = x.Name or 'Page'..tostring(AmountOfPages)
		x.OpenOnStart = x.OpenOnStart or AmountOfPages == 1 and true or false
		x.Icon = geticon(x.Icon) or x.Icon or icons.defualt or icons.defaultalt
		if AmountOfPages >= 10 then
			TabButtonViewLayout.HorizontalAlignment = "Left"
		end
		local Page = Instance.new("Frame",PagesView)
		local PageLayout = Instance.new("UIListLayout",Page)
		local TabButton = Instance.new("ImageButton",TabButtonView)
		local TabCorner = Instance.new("UICorner",TabButton)
		local NamePopup = Instance.new("TextLabel",TabButton)
		local NamePopupCorner = Instance.new("UICorner",NamePopup)
		Page.Name = "Page"
		Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Page.BackgroundTransparency = 1.000
		Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Page.BorderSizePixel = 0
		Page.Size = UDim2.new(1, 0, 0, 0)
		Page.Visible = false

		TabButton.Name = "Tab"
		TabButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabButton.BackgroundTransparency = 0.950
		TabButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		TabButton.BorderSizePixel = 0
		TabButton.Position = UDim2.new(0.435400516, 0, 0.346153855, 0)
		TabButton.Size = UDim2.new(0, 60, 0, 60)
		TabButton.ZIndex = 3
		TabButton.Image = x.Icon
		TabButton.ScaleType = Enum.ScaleType.Fit
		TabButton.TileSize = UDim2.new(0.600000024, 0, 0.800000012, 0)

		NamePopup.AnchorPoint = Vector2.new(0.5, 0)
		NamePopup.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
		NamePopup.BackgroundTransparency = 0.300
		NamePopup.BorderColor3 = Color3.fromRGB(0, 0, 0)
		NamePopup.BorderSizePixel = 0
		NamePopup.Position = UDim2.new(0.5, 0, 0, 0)
		NamePopup.Size = UDim2.new(1, 0, 0, 20)
		NamePopup.Visible = false
		NamePopup.Text = x.Name
		NamePopup.Font = Enum.Font.GothamBold
		NamePopup.TextColor3 = Color3.fromRGB(255, 255, 255)
		NamePopup.TextSize = 14.000

		NamePopupCorner.CornerRadius = UDim.new(0, 5)
		TabButton.MouseEnter:Connect(function()
			if x.DisplayName then
				NamePopup.Visible = true
			end
		end)
		TabButton.MouseLeave:Connect(function()
			NamePopup.Visible = false
		end)
		TabButton.MouseButton1Click:Connect(function()
			closePageButton(true,false)
			wait(.11)
			for i,v in pairs(PagesView:GetChildren()) do
				if v:IsA('Frame') then
					v.Visible = false
				end
			end
			Page.Visible = true
			closePageButton(true,true)
		end)

		TabCorner.CornerRadius = UDim.new(0, 10)

		Page.Name = "Page"
		Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Page.BackgroundTransparency = 1.000
		Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Page.BorderSizePixel = 0
		Page.Size = UDim2.new(1, 0, 0, 0)
		Page.AutomaticSize = "Y"

		PageLayout.Name = "PageLayout"
		PageLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
		PageLayout.SortOrder = Enum.SortOrder.LayoutOrder
		PageLayout.Padding = UDim.new(0, 5)
		if x.OpenOnStart then
			for i,v in pairs(PagesView:GetChildren()) do
				if v:IsA('Frame') then
					v.Visible = false
				end
			end
			Page.Visible = true
		end
		local Pages = {}
		Pages.Button = function(x)
			x = x or {}
			x.Text = x.Text or 'Button'
			x.Callback = x.Callback or function()
				print(x.Text,'was pressed')
			end
			local Button = Instance.new("TextButton",Page)
			local ButtonCorner = Instance.new("UICorner",Button)

			Button.Name = "Button"
			Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Button.BackgroundTransparency = 0.950
			Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Button.BorderSizePixel = 0
			Button.Size = UDim2.new(1, -25, 0, 35)
			Button.Font = Enum.Font.GothamBold
			Button.TextColor3 = Color3.fromRGB(255, 255, 255)
			Button.TextSize = 14.000
			Button.Text = x.Text
			Button.MouseButton1Click:Connect(x.Callback)
			local BuTTon = {}
			return BuTTon
		end
		Pages.Toggle = function(x)
			x = x or {}
			x.Text = x.Text or 'Toggle'
			x.State = x.State or false
			x.Callback = x.Callback or function()
				print('State of',x.Text,'changed to',x.State)
			end
			local Toggler = Instance.new("ImageButton",Page)
			local TogglerCorner = Instance.new("UICorner",Toggler)
			local ToggleUI = Instance.new("Frame",Toggler)
			local ToggleUICorner = Instance.new("UICorner",ToggleUI)
			local ToggleSwitch = Instance.new("Frame",ToggleUI)
			local ToggleSwitchCorner = Instance.new("UICorner",ToggleSwitch)
			local Text = Instance.new("TextLabel",Toggler)
			local ToggleTweens = {
				Off = tw:Create(ToggleSwitch,twInfo,{
					Position = UDim2.new(0, 0,0.5, 0),
					BackgroundColor3 = Color3.fromRGB(255, 0, 0)
				}),
				On = tw:Create(ToggleSwitch,twInfo,{
					Position = UDim2.new(.5, 0,0.5, 0),
					BackgroundColor3 = Color3.fromRGB(0, 255, 0)
				})
			}

			Toggler.Name = "Toggler"
			Toggler.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Toggler.BackgroundTransparency = 0.950
			Toggler.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Toggler.BorderSizePixel = 0
			Toggler.Size = UDim2.new(1, -25, 0, 35)
			Toggler.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
			Toggler.ImageTransparency = 1.000
			local function sex(v)
				if v ~= nil then
					x.State = v
					if v then
						ToggleTweens.Off:Cancel()
						ToggleTweens.On:Play()
					else
						ToggleTweens.On:Cancel()
						ToggleTweens.Off:Play()
					end
				else
					x.State = not x.State
					if x.State then
						ToggleTweens.Off:Cancel()
						ToggleTweens.On:Play()
					else
						ToggleTweens.On:Cancel()
						ToggleTweens.Off:Play()
					end
				end
				x.Callback(x.State)
			end
			sex(x.State)
			Toggler.MouseButton1Click:Connect(sex)

			TogglerCorner.Name = "TogglerCorner"

			ToggleUI.Name = "ToggleUI"
			ToggleUI.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleUI.BackgroundTransparency = 0.950
			ToggleUI.BorderColor3 = Color3.fromRGB(0, 0, 0)
			ToggleUI.BorderSizePixel = 0
			ToggleUI.Position = UDim2.new(0.687272727, 0, 0.142857149, 0)
			ToggleUI.Size = UDim2.new(0, 76, 0, 25)

			ToggleUICorner.Name = "ToggleUICorner"

			ToggleSwitch.Name = "ToggleSwitch"
			ToggleSwitch.AnchorPoint = Vector2.new(0, 0.5)
			ToggleSwitch.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			ToggleSwitch.BackgroundTransparency = 0.600
			ToggleSwitch.BorderColor3 = Color3.fromRGB(0, 0, 0)
			ToggleSwitch.BorderSizePixel = 0
			ToggleSwitch.Position = UDim2.new(0, 0, 0.5, 0)
			ToggleSwitch.Size = UDim2.new(0, 38, 0, 25)

			ToggleSwitchCorner.Name = "ToggleSwitchCorner"

			Text.Name = "Text"
			Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Text.BackgroundTransparency = 1.000
			Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Text.BorderSizePixel = 0
			Text.Position = UDim2.new(0, 10, 0, 0)
			Text.Size = UDim2.new(0, 170, 0, 35)
			Text.Font = Enum.Font.GothamBold
			Text.TextColor3 = Color3.fromRGB(255, 255, 255)
			Text.TextSize = 14.000
			Text.Text = x.Text
			Text.TextXAlignment = Enum.TextXAlignment.Left
			local Toggle = {}
			return Toggle
		end
		Pages.Text = function(x)
			x = x or {}
			x.Text = x.Text or 'Text'
			x.Height = x.Height or 35
			local Text = Instance.new("TextLabel",Page)
			local TextCorner = Instance.new("UICorner",Text)

			Text.Name = "Text"
			Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Text.BackgroundTransparency = 0.950
			Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Text.BorderSizePixel = 0
			Text.Size = UDim2.new(1, -25, 0, x.Height)
			Text.Font = Enum.Font.GothamBold
			Text.TextColor3 = Color3.fromRGB(255, 255, 255)
			Text.TextSize = 14.000
			Text.TextWrapped = true
			Text.Text = x.Text

			TextCorner.Name = "TextCorner"
			local Text_ = {}
			return Text_
		end
		Pages.Seekbar = function(seekbar_)
			seekbar_ = seekbar_ or {}
			seekbar_.Text = seekbar_.Text or 'Seekbar'
			seekbar_.Min,seekbar_.Max,seekbar_.Current = seekbar_.Min or 0, seekbar_.Max or 100,seekbar_.Current or 0
			seekbar_.Round = (seekbar_.Round ~= true and false) or true
			seekbar_.Callback = seekbar_.Callback or function(x)print('Current value of',seekbar_.Text,'is',x)end
			local uis = game:GetService("UserInputService")
			local dragging,dragInput,dragStart,startPos,draggedservice

			local MainSeekbarHolder = Instance.new("Frame",Page)
			local MainSeekbarHolderCorner = Instance.new("UICorner",MainSeekbarHolder)
			local SeekBar = Instance.new("ImageButton",MainSeekbarHolder)
			local SeekBarCorner = Instance.new("UICorner",SeekBar)
			local SeekBarVisual = Instance.new("Frame",SeekBar)
			local SeekBarVisualCorner = Instance.new("UICorner",SeekBarVisual)
			local SeekbarText = Instance.new("TextLabel",MainSeekbarHolder)
			local EditSeekBar = Instance.new("TextBox",MainSeekbarHolder)
			local EditSeekBarCorner = Instance.new("UICorner",EditSeekBar)

			MainSeekbarHolder.Name = "MainSeekbarHolder"
			MainSeekbarHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			MainSeekbarHolder.BackgroundTransparency = 0.950
			MainSeekbarHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
			MainSeekbarHolder.BorderSizePixel = 0
			MainSeekbarHolder.Position = UDim2.new(0.0416666679, 0, 0.451065063, 0)
			MainSeekbarHolder.Size = UDim2.new(1, -25, 0, 50)

			MainSeekbarHolderCorner.Name = "MainSeekbarHolderCorner"

			SeekBar.Name = "SeekBar"
			SeekBar.AnchorPoint = Vector2.new(0.5, 1)
			SeekBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SeekBar.BackgroundTransparency = 0.980
			SeekBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
			SeekBar.BorderSizePixel = 0
			SeekBar.Position = UDim2.new(0.5, 0, 1, -5)
			SeekBar.Size = UDim2.new(1, -25, 0, 20)
			SeekBar.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
			SeekBar.ImageTransparency = 1.000

			SeekBarCorner.Name = "SeekBarCorner"

			SeekBarVisual.Name = "SeekBarVisual"
			SeekBarVisual.BackgroundColor3 = Color3.fromRGB(69, 69, 69)
			SeekBarVisual.BackgroundTransparency = 0.800
			SeekBarVisual.BorderColor3 = Color3.fromRGB(0, 0, 0)
			SeekBarVisual.BorderSizePixel = 0
			SeekBarVisual.Size = UDim2.new(0, 0, 0, 20)

			SeekBarVisualCorner.Name = "SeekBarVisualCorner"

			SeekbarText.Name = "SeekbarText"
			SeekbarText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SeekbarText.BackgroundTransparency = 1.000
			SeekbarText.BorderColor3 = Color3.fromRGB(0, 0, 0)
			SeekbarText.BorderSizePixel = 0
			SeekbarText.Position = UDim2.new(0, 10, 0, 5)
			SeekbarText.Size = UDim2.new(0, 170, 0, 20)
			SeekbarText.Font = Enum.Font.GothamBold
			SeekbarText.TextColor3 = Color3.fromRGB(255, 255, 255)
			SeekbarText.TextSize = 14.000
			SeekbarText.TextXAlignment = Enum.TextXAlignment.Left
			SeekbarText.Text = seekbar_.Text

			EditSeekBar.Name = "EditSeekBar"
			EditSeekBar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			EditSeekBar.BackgroundTransparency = 0.860
			EditSeekBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
			EditSeekBar.BorderSizePixel = 0
			EditSeekBar.Position = UDim2.new(0.673454344, 0, 0, 5)
			EditSeekBar.Size = UDim2.new(0, 75, 0, 20)
			EditSeekBar.ClearTextOnFocus = false
			EditSeekBar.Font = Enum.Font.GothamBold
			EditSeekBar.Text = seekbar_.Current
			EditSeekBar.TextColor3 = Color3.fromRGB(255, 255, 255)
			EditSeekBar.TextSize = 14.000

			EditSeekBarCorner.Name = "EditSeekBarCorner"

			local function Set(v)
				if v >= seekbar_.Max then
					SeekBarVisual.Size = UDim2.new(1,0, 1,0)
				elseif v <= seekbar_.Min then
					SeekBarVisual.Size = UDim2.new(0,0, 1,0)
				else
					local x
					local m,n = seekbar_.Min,seekbar_.Max
					if seekbar_.Min < 0 then
						m = seekbar_.Min*-1
					end
					if seekbar_.Max < 0 then
						n = seekbar_.Max*-1
					end
					if seekbar_.Min > 0 then
						x = ((v)/(n+m))
					else
						x = ((v+m)/(n+m))
					end
					SeekBarVisual.Size = UDim2.new(x,0, 1,0)
				end
			end
			Set(seekbar_.Current)
			seekbar_.Callback(seekbar_.Current)
			EditSeekBar.FocusLost:Connect(function()
				if not dragging then
					local allowed = {
						[""] = true,
						["-"] = true
					}
					local text = EditSeekBar.Text

					if typeof(tonumber(text)) == nil then
						EditSeekBar.Text = text:sub(1, #text - 1)
					elseif typeof(tonumber(text)) == "number" then
						seekbar_.Current = tonumber(text)
						Set(seekbar_.Current)
						seekbar_.Callback(seekbar_.Current)
					end
				end
			end)
			local function update(input)
				local delta = input.Position - dragStart
				local x = startPos.X.Scale + delta.X/SeekBar.AbsoluteSize.X
				wait(.005)
				x = math.clamp(x, 0, 1)
				seekbar_.Current = seekbar_.Min + (seekbar_.Max - seekbar_.Min) * x
				if x > 0 then
					if x < 1 then
						SeekBarVisual.Size = UDim2.new(x,0, 1,0)
					else
						SeekBarVisual.Size = UDim2.new(1,0, 1,0)
					end
				else
					SeekBarVisual.Size = UDim2.new(0, 0, 1, 0)
				end
				if seekbar_.Round then
					EditSeekBar.Text = math.round(seekbar_.Current)
					seekbar_.Current = math.round(seekbar_.Current)
				else
					EditSeekBar.Text = seekbar_.Current
				end
				seekbar_.Callback(seekbar_.Current)
			end
			SeekBar.InputBegan:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					dragging,dragStart,startPos = true,input.Position,SeekBarVisual.Size
					draggedservice = input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragging = false;draggedservice:Disconnect()
						end
					end)
				end
			end)
			SeekBar.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			uis.InputChanged:Connect(function(input)
				if input == dragInput and dragging then
					update(input)
				end
			end)
			local Seekbar = {}
			Seekbar.Value = function(x)
				if typeof(x) ~= 'number' then
					return seekbar_.Current
				else			
					seekbar_.Current = x
				end
			end
			return Seekbar
		end
		Pages.Dropdown = function(Dropdown_)
			Dropdown_ = Dropdown_ or {}
			Dropdown_.Text = Dropdown_.Text or "Dropdown"
			Dropdown_.Items = Dropdown_.Items or {
				'Item1','Item2','Item3','Item4'
			}
			Dropdown_.Selected = Dropdown_.Selected or 1
			Dropdown_.Callback = Dropdown_.Callback or function(x)
				print('Selected',x,'in dropdown',Dropdown_.Text)
			end
			local Dropdown = Instance.new("Frame",Page)
			local DropdownCorner = Instance.new("UICorner",Dropdown)
			local DropdownText = Instance.new("TextLabel",Dropdown)
			local DropButton = Instance.new("ImageButton",Dropdown)
			local DropButtonCorner = Instance.new("UICorner",DropButton)
			local SelectedDropitem = Instance.new("TextLabel",DropButton)
			local Dropped = Instance.new("Frame",DropButton)
			local DroppedCorner = Instance.new("UICorner",Dropped)
			local DroppedView = Instance.new("ScrollingFrame",Dropped)
			local DroppedViewLayout = Instance.new("UIListLayout",DroppedView)
			local stub = Instance.new("Frame",DroppedView)

			Dropdown.Name = "Dropdown"
			Dropdown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Dropdown.BackgroundTransparency = 0.950
			Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Dropdown.BorderSizePixel = 0
			Dropdown.Position = UDim2.new(0.0416666679, 0, 0.451065063, 0)
			Dropdown.Size = UDim2.new(1, -25, 0, 40)
			Dropdown.ZIndex = 2

			DropdownCorner.Name = "DropdownCorner"

			DropdownText.Name = "DropdownText"
			DropdownText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			DropdownText.BackgroundTransparency = 1.000
			DropdownText.BorderColor3 = Color3.fromRGB(0, 0, 0)
			DropdownText.BorderSizePixel = 0
			DropdownText.Position = UDim2.new(0, 10, 0, 5)
			DropdownText.Size = UDim2.new(0, 145, 0, 30)
			DropdownText.Font = Enum.Font.GothamBold
			DropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
			DropdownText.TextSize = 14.000
			DropdownText.TextXAlignment = Enum.TextXAlignment.Left
			DropdownText.Text = Dropdown_.Text

			DropButton.Name = "DropButton"
			DropButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			DropButton.BackgroundTransparency = 0.950
			DropButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
			DropButton.BorderSizePixel = 0
			DropButton.Position = UDim2.new(0, 160, 0, 5)
			DropButton.Size = UDim2.new(0, 110, 0, 30)
			DropButton.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
			DropButton.ImageTransparency = 1.000

			DropButtonCorner.Name = "DropButtonCorner"

			Dropped.Name = "Dropped"
			Dropped.BackgroundColor3 = Color3.fromRGB(16, 16, 16)
			Dropped.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Dropped.BorderSizePixel = 0
			Dropped.Position = UDim2.new(0, 0, 1, 0)
			Dropped.Size = UDim2.new(1, 0, 0, 69)

			DroppedCorner.Name = "DroppedCorner"

			DroppedView.Name = "DroppedView"
			DroppedView.Active = true
			DroppedView.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			DroppedView.BackgroundTransparency = 1.000
			DroppedView.BorderColor3 = Color3.fromRGB(0, 0, 0)
			DroppedView.BorderSizePixel = 0
			DroppedView.Size = UDim2.new(1, 0, 1, 0)
			DroppedView.CanvasSize = UDim2.new(0, 0, 0, 0)
			DroppedView.ScrollBarThickness = 6
			DroppedView.AutomaticCanvasSize = "Y"

			DroppedViewLayout.Name = "DroppedViewLayout"
			DroppedViewLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
			DroppedViewLayout.SortOrder = Enum.SortOrder.LayoutOrder
			DroppedViewLayout.Padding = UDim.new(0, 3)

			stub.Name = "stub"
			stub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			stub.BorderColor3 = Color3.fromRGB(0, 0, 0)
			stub.BorderSizePixel = 0

			SelectedDropitem.Name = "SelectedDropitem"
			SelectedDropitem.AnchorPoint = Vector2.new(0.5, 0.5)
			SelectedDropitem.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SelectedDropitem.BackgroundTransparency = 1.000
			SelectedDropitem.BorderColor3 = Color3.fromRGB(0, 0, 0)
			SelectedDropitem.BorderSizePixel = 0
			SelectedDropitem.Position = UDim2.new(0.5, 0, 0.5, 0)
			SelectedDropitem.Size = UDim2.new(0, 88, 0, 19)
			SelectedDropitem.Font = Enum.Font.GothamBold
			SelectedDropitem.TextColor3 = Color3.fromRGB(255, 255, 255)
			SelectedDropitem.TextSize = 14.000
			SelectedDropitem.Text = Dropdown_.Items[Dropdown_.Selected]
			local isDropped,all = false,{}
			local function drop(x)
				if x ~= nil then
					isDropped = x
					Dropped.Visible = x
				else
					isDropped = not isDropped
					if isDropped then
						Dropped.Visible = true
					else
						Dropped.Visible = false
					end
				end
			end
			DropButton.MouseButton1Click:Connect(drop)
			local function createitem(Name,index)
				local DropdownItem = Instance.new("TextButton",DroppedView)
				local DropdownItemCorner = Instance.new("UICorner",DropdownItem)

				DropdownItem.Name = "DropdownItem"
				DropdownItem.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				DropdownItem.BackgroundTransparency = 0.850
				DropdownItem.BorderColor3 = Color3.fromRGB(0, 0, 0)
				DropdownItem.BorderSizePixel = 0
				DropdownItem.Size = UDim2.new(0.800000012, 0, 0, 19)
				DropdownItem.Font = Enum.Font.GothamBold
				DropdownItem.TextColor3 = Color3.fromRGB(255, 255, 255)
				DropdownItem.TextSize = 12.000
				DropdownItem.Text = Name

				DropdownItemCorner.CornerRadius = UDim.new(0, 4)
				DropdownItemCorner.Name = "DropdownItemCorner"
				local btn;btn=DropdownItem.MouseButton1Click:Connect(function()
					SelectedDropitem.Text = Name
					Dropdown_.Selected = index
					Dropdown_.Callback(Name,index)
					drop(false)
				end)
				return function(x)
					if typeof(x) == nil then
						DropdownItem:Destroy()
						btn:Disconnect()
						drop(false)
					else
						SelectedDropitem.Text = Name
						Dropdown_.Selected = index
						Dropdown_.Callback(Name,index)
						drop(false)
					end
				end
			end
			local function createdrop()
				SelectedDropitem.Text = ''
				for i,v in pairs(all) do
					v()
				end
				table.clear(all)
				for i,v in ipairs(Dropdown_.Items) do
					table.insert(all,createitem(v,i))
				end
				all[Dropdown_.Selected or 1]('')
			end
			createdrop()
			local drop = {}
			drop.Value = function(x)
				if typeof(x) ~= 'number' then
					return Dropdown_.Selected
				else
					Dropdown_.Selected = x
				end
			end
			return drop
		end
		return Pages
	end
	Tweens.Blur.Hide:Play()
	Tweens.MainUI.Hide:Play()
	Tweens.Pages.Hide:Play()
	Tweens.OpenButton.Show:Play()
	closePageButton(true)
	return Main
end

return Bongo_sUI
